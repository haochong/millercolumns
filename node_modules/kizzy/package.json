{
  "name": "kizzy",
  "description": "x-browser LocalStorage API with a memcached interface",
  "main": "kizzy.js",
  "ender": "./src/ender.js",
  "keywords": [
    "ender",
    "cache",
    "local storage",
    "caching",
    "expiration",
    "dom"
  ],
  "version": "0.0.5",
  "homepage": "https://github.com/ded/kizzy",
  "author": {
    "name": "Dustin Diaz",
    "email": "dustin@dustindiaz.com",
    "url": "http://dustindiaz.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ded/kizzy.git"
  },
  "devDependencies": {
    "sink-test": "*"
  },
  "readme": "# Kizzy - a Local Storage Utility\n\nKizzy is a light-weight, cross-browser, JavaScript local storage utility. It leverages the HTML5 localStorage API when available, as well as Internet Explorer's persistent XML store â€” wrapped up in a easy to use, memcached-like interface. When neither of these features are available (unlikely), it falls back to an in-browser object store.\n\nIt looks like this\n\n``` js\nvar cache = kizzy('users')\nvar agent = cache.get('Agent')\nif (agent) {\n  alert('Welcome back ' + agent.name)\n} else {\n  cache.set('Agent', {\n    name: 'Agent Diaz'\n  })\n}\n```\n\nFurthermore, a call to 'set' will return the value, making it quite easy for assignment.\n\n``` js\nvar cache = kizzy('users')\nvar agent = cache.get('Agent') || cache.set('Agent', {\n  name: 'Agent Diaz'\n})\n```\n\nLastly, you can pass an optional third argument to 'set' that tells the cache how long to live\n\n``` js\nvar cache = kizzy('users')\n\nvar agent = cache.get('Agent') || cache.set('Agent', {\n  name: 'Agent Diaz'\n}, 5000) // time to live set for 5 seconds\n\n\n// wait 3 seconds...\nsetTimeout(function() {\n  alert('Still there ' + cache.get('Agent').name)\n}, 3000)\n\n// 6 seconds later...\nsetTimeout(function() {\n  cache.get('Agent').name // => expired\n}, 6000)\n```\n\n# Browser support\n\n  * Internet Explorer 6+\n  * Firefox 2+ (when localStorage is enabled (the browser default))\n  * Chrome\n  * Safari 4+\n  * Opera\n\n# Building Kizzy\n\n``` sh\n$ submodule update --init\n& make\n```\n\n# Running tests\n\nTests will not currently pass if run on a file:/// protocol. Otherwise...\n\n``` sh\n$ open tests/test.html\n```\n\n# Ender integration\n\nInstall Kizzy as an Ender module\n\n``` sh\n$ ender add kizzy\n```\n\nUse it as such:\n\n``` js\n$.cache('user').get('name')\n```\n\n# Kizzy whu?\n\nThe name comes from Kunta Kinte, a Mandinka African warrior from the 1700's. After being brought into slavery, he had a daughter whom he named Kizzy, which translates to *stay put* in hopes that the family would stay together, but not stay a slave.\n\nHappy Caching!",
  "_id": "kizzy@0.0.5",
  "dist": {
    "shasum": "f85086e3b989fc92a08527fb4393acebae3bbc22"
  },
  "_from": "kizzy"
}
